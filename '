/* -*- C -*- */
/*
 * Copyright (c) 2013-2020 Seagate Technology LLC and/or its Affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions about this software or licensing,
 * please email opensource@seagate.com or cortx-questions@seagate.com.
 *
 */

/**
 * @addtogroup dtm0
 *
 * @{
 */

#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_DTM0
#include "lib/trace.h"

#include "dtm0/domain.h"


#define DTM0_DOMAIN_LEVEL(level) [level] = {            \
		.ml_name  = #level,                     \
		.ml_enter = dtm0_domain_level_enter,    \
		.ml_leave = dtm0_domain_level_leave,    \
	}

enum dtm0_domain_level {
	M0_DTM0_DOMAIN_LEVEL_INIT,
};

static const struct m0_modlev levels_be_domain[] = {
	DTM0_DOMAIN_LEVEL(M0_DTM0_DOMAIN_LEVEL_INIT),
};
#undef DTM0_DOMAIN_LEVEL

static void dtm0_domain_module_setup(struct m0_dtm0_domain     *dod,
                                     struct m0_dtm0_domain_cfg *dod_cfg)
{
	m0_module_setup(&dod->dod_module, "m0_dtm0_domain module",
	                levels_dtm0_domain, ARRAY_SIZE(levels_dtm0_domain),
	                m0_get());
	dod->dod_cfg = *dod_cfg;        /* XXX */
}

M0_INTERNAL int m0_dtm0_domain_init(struct m0_dtm0_domain     *dod,
				    struct m0_dtm0_domain_cfg *dod_cfg)
{
	return 0;
}

M0_INTERNAL void m0_dtm0_domain_fini(struct m0_dtm0_domain *dod)
{
}

M0_INTERNAL int m0_dtm0_domain_create(struct m0_dtm0_domain            *dod,
				      struct m0_dtm0_domain_create_cfg *dc_cfg)
{
	return 0;
}

M0_INTERNAL void m0_dtm0_domain_destroy(struct m0_dtm0_domain *dod)
{
}

#undef M0_TRACE_SUBSYSTEM

/** @} end of dtm0 group */

/*
 *  Local variables:
 *  c-indentation-style: "K&R"
 *  c-basic-offset: 8
 *  tab-width: 8
 *  fill-column: 80
 *  scroll-step: 1
 *  End:
 */
/*
 * vim: tabstop=8 shiftwidth=8 noexpandtab textwidth=80 nowrap
 */
